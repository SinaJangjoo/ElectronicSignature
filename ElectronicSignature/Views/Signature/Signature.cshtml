@{
    ViewData["Title"] = "Signature";
}

<h2>Signature</h2>

<canvas id="signature-pad" width="500" height="300" style="border:1px solid #000000;"></canvas>
<br />
<button class=" btn btn-warning" id="clear">Clear</button>
<button class=" btn btn-success" id="save">Save</button>

<script>
    var canvas = document.getElementById('signature-pad');
    var ctx = canvas.getContext('2d');
    var drawing = false;
    var lastX = 0;
    var lastY = 0;

    function getCoords(e) {
        if (e.touches && e.touches.length === 1) {
            var touch = e.touches[0];
            return { x: touch.clientX - canvas.offsetLeft, y: touch.clientY - canvas.offsetTop };
        } else if (e.offsetX) {
            return { x: e.offsetX, y: e.offsetY };
        }
    }

    canvas.addEventListener('mousedown', function (e) {
        drawing = true;
        var coords = getCoords(e);
        lastX = coords.x;
        lastY = coords.y;
    });

    canvas.addEventListener('mousemove', function (e) {
        if (drawing) {
            var coords = getCoords(e);
            ctx.beginPath();
            ctx.moveTo(lastX, lastY);
            ctx.lineTo(coords.x, coords.y);
            ctx.stroke();
            ctx.closePath();
            lastX = coords.x;
            lastY = coords.y;
        }
    });

    canvas.addEventListener('mouseup', function (e) {
        drawing = false;
    });

    canvas.addEventListener('touchstart', function (e) {
        drawing = true;
        var coords = getCoords(e);
        lastX = coords.x;
        lastY = coords.y;
        e.preventDefault();
    });

    canvas.addEventListener('touchmove', function (e) {
        if (drawing) {
            var coords = getCoords(e);
            ctx.beginPath();
            ctx.moveTo(lastX, lastY);
            ctx.lineTo(coords.x, coords.y);
            ctx.stroke();
            ctx.closePath();
            lastX = coords.x;
            lastY = coords.y;
            e.preventDefault();
        }
    });

    canvas.addEventListener('touchend', function (e) {
        drawing = false;
    });

    document.getElementById('clear').addEventListener('click', function () {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    });

    function isCanvasBlank(canvas) {
        const blank = document.createElement('canvas');
        blank.width = canvas.width;
        blank.height = canvas.height;
        return canvas.toDataURL() === blank.toDataURL();
    }

    document.getElementById('save').addEventListener('click', function () {
        if (isCanvasBlank(canvas)) {
            alert('Please provide a signature before saving.');
            return;
        }

        var dataURL = canvas.toDataURL('image/png');
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '@Url.Action("SaveSignature", "Signature")', true);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) {
                alert('Signature saved');
            }
        };
        xhr.send('img=' + encodeURIComponent(dataURL));
    });
</script>
